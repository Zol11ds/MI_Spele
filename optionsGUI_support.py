#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.1
#  in conjunction with Tcl version 8.6
#    May 13, 2021 04:15:26 PM EEST  platform: Windows NT

import sys
import settings
from tkinter import messagebox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global selectedButton1
    selectedButton1 = tk.IntVar()
    global selectedButton2
    selectedButton2 = tk.IntVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def getText():
    import optionsGUI

def radioSelect():
    global w, selectedButton1
    if selectedButton1.get() == 1:
        w.Text1.config(state = 'disabled')
        w.Text1.config(bg='grey')
        w.Text1.config(fg='grey')
    else:
        w.Text1.config(state='normal')
        w.Text1.config(bg='white')
        w.Text1.config(fg='black')

def settingsOK():
    print('options_support.settingsOK')
    import main
    global w
    global top_level
    global selectedButton1, selectedButton2
    if selectedButton1.get() == 0:
        if main.checkVirkne(w.Text1.get("1.0", 'end-1c')) == True and len(w.Text1.get("1.0", 'end-1c')) > 4:
            settings.virkne = w.Text1.get("1.0", 'end-1c')
        else:
            messagebox.showerror("Kļūda", "Kļūda virknes ievadē!")
            top_level.destroy()
            top_level = None
            return 0
    else:
        settings.virkne = main.createRandomStart()

    if selectedButton2.get() == 1:
        settings.iesak = -1
    else:
        settings.iesak = 1
    sys.stdout.flush()
    import GUI_support
    GUI_support.update()
    GUI_support.startGame()

    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import optionsGUI
    optionsGUI.vp_start_gui()




